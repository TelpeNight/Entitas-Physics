//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Physics.ColliderComponent physicsCollider { get { return (Physics.ColliderComponent)GetComponent(GameComponentsLookup.PhysicsCollider); } }
    public bool hasPhysicsCollider { get { return HasComponent(GameComponentsLookup.PhysicsCollider); } }

    public void AddPhysicsCollider(Unity.Entities.BlobAssetReference<Unity.Physics.Collider> newValue) {
        var index = GameComponentsLookup.PhysicsCollider;
        var component = (Physics.ColliderComponent)CreateComponent(index, typeof(Physics.ColliderComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePhysicsCollider(Unity.Entities.BlobAssetReference<Unity.Physics.Collider> newValue) {
        var index = GameComponentsLookup.PhysicsCollider;
        var component = (Physics.ColliderComponent)CreateComponent(index, typeof(Physics.ColliderComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePhysicsCollider() {
        RemoveComponent(GameComponentsLookup.PhysicsCollider);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPhysicsCollider;

    public static Entitas.IMatcher<GameEntity> PhysicsCollider {
        get {
            if (_matcherPhysicsCollider == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PhysicsCollider);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPhysicsCollider = matcher;
            }

            return _matcherPhysicsCollider;
        }
    }
}
