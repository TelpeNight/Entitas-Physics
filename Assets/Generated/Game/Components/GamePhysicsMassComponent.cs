//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Physics.MassComponent physicsMass { get { return (Physics.MassComponent)GetComponent(GameComponentsLookup.PhysicsMass); } }
    public bool hasPhysicsMass { get { return HasComponent(GameComponentsLookup.PhysicsMass); } }

    public void AddPhysicsMass(Unity.Physics.PhysicsMass newValue) {
        var index = GameComponentsLookup.PhysicsMass;
        var component = (Physics.MassComponent)CreateComponent(index, typeof(Physics.MassComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePhysicsMass(Unity.Physics.PhysicsMass newValue) {
        var index = GameComponentsLookup.PhysicsMass;
        var component = (Physics.MassComponent)CreateComponent(index, typeof(Physics.MassComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePhysicsMass() {
        RemoveComponent(GameComponentsLookup.PhysicsMass);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPhysicsMass;

    public static Entitas.IMatcher<GameEntity> PhysicsMass {
        get {
            if (_matcherPhysicsMass == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PhysicsMass);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPhysicsMass = matcher;
            }

            return _matcherPhysicsMass;
        }
    }
}
