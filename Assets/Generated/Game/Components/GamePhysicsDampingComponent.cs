//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Physics.DampingComponent physicsDamping { get { return (Physics.DampingComponent)GetComponent(GameComponentsLookup.PhysicsDamping); } }
    public bool hasPhysicsDamping { get { return HasComponent(GameComponentsLookup.PhysicsDamping); } }

    public void AddPhysicsDamping(float newLinear, float newAngular) {
        var index = GameComponentsLookup.PhysicsDamping;
        var component = (Physics.DampingComponent)CreateComponent(index, typeof(Physics.DampingComponent));
        component.Linear = newLinear;
        component.Angular = newAngular;
        AddComponent(index, component);
    }

    public void ReplacePhysicsDamping(float newLinear, float newAngular) {
        var index = GameComponentsLookup.PhysicsDamping;
        var component = (Physics.DampingComponent)CreateComponent(index, typeof(Physics.DampingComponent));
        component.Linear = newLinear;
        component.Angular = newAngular;
        ReplaceComponent(index, component);
    }

    public void RemovePhysicsDamping() {
        RemoveComponent(GameComponentsLookup.PhysicsDamping);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPhysicsDamping;

    public static Entitas.IMatcher<GameEntity> PhysicsDamping {
        get {
            if (_matcherPhysicsDamping == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PhysicsDamping);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPhysicsDamping = matcher;
            }

            return _matcherPhysicsDamping;
        }
    }
}
